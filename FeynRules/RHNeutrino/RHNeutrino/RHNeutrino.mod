(* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *)
(*                                                                             *)
(*         This file has been automatically generated by FeynRules.            *)
(*                                                                             *)
(* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *)


FR$ModelInformation={
  ModelName->"Standard Model + 3 RH-Neutrinos",
  Authors -> {"Logan A. Morrison"},
  Version -> "1.0.0",
  Date -> "24. 01. 2020",
  Institutions -> {"University of California, Santa Cruz"},
  Emails -> {"loanmorr@ucsc.edu"}};

FR$ClassesTranslation={A -> V[1], Z -> V[2], W -> V[3], G -> V[4], ghA -> U[1], ghZ -> U[2], ghWp -> U[3], ghWm -> U[4], ghG -> U[5], ve -> F[1], vm -> F[2], vt -> F[3], e -> F[4], mu -> F[5], ta -> F[6], u -> F[7], c -> F[8], t -> F[9], d -> F[10], s -> F[11], b -> F[12], Ne -> F[13], Nm -> F[14], Nt -> F[15], H -> S[1], G0 -> S[2], GP -> S[3]};

FR$InteractionOrderPerturbativeExpansion={{QCD, 0}, {NP, 0}, {QED, 0}};

FR$GoldstoneList={S[2], S[3]};

(*     Declared indices    *)

IndexRange[ Index[Gluon] ] = NoUnfold[ Range[ 8 ] ]

IndexRange[ Index[Generation] ] = Range[ 3 ]

IndexRange[ Index[Colour] ] = NoUnfold[ Range[ 3 ] ]

IndexRange[ Index[SU2W] ] = Range[ 3 ]

IndexRange[ Index[SU2D] ] = Range[ 2 ]

(*     Declared particles    *)

M$ClassesDescription = {
V[1] == {
    SelfConjugate -> True,
    PropagatorType -> Sine,
    PropagatorArrow -> None,
    Mass -> 0,
    Indices -> {},
    PropagatorLabel -> "A" },

V[2] == {
    SelfConjugate -> True,
    PropagatorType -> Sine,
    PropagatorArrow -> None,
    Mass -> MZ,
    Indices -> {},
    PropagatorLabel -> "Z" },

V[3] == {
    SelfConjugate -> False,
    QuantumNumbers -> {Q},
    PropagatorType -> Sine,
    PropagatorArrow -> Forward,
    Mass -> MW,
    Indices -> {},
    PropagatorLabel -> "W" },

V[4] == {
    SelfConjugate -> True,
    PropagatorType -> Cycles,
    PropagatorArrow -> None,
    Mass -> 0,
    Indices -> {Index[Gluon]},
    PropagatorLabel -> "G" },

U[1] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> 0,
    Indices -> {},
    PropagatorLabel -> "ghA" },

U[2] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> MZ,
    Indices -> {},
    PropagatorLabel -> "ghZ" },

U[3] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber, Q},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> MW,
    Indices -> {},
    PropagatorLabel -> "ghWp" },

U[4] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber, -Q},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> MW,
    Indices -> {},
    PropagatorLabel -> "ghWm" },

U[5] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> 0,
    Indices -> {Index[Gluon]},
    PropagatorLabel -> "ghG" },

F[1] == {
    SelfConjugate -> True,
    PropagatorType -> Straight,
    PropagatorArrow -> None,
    Mass -> MNue,
    Indices -> {},
    PropagatorLabel -> "ve" },

F[2] == {
    SelfConjugate -> True,
    PropagatorType -> Straight,
    PropagatorArrow -> None,
    Mass -> MNum,
    Indices -> {},
    PropagatorLabel -> "vm" },

F[3] == {
    SelfConjugate -> True,
    PropagatorType -> Straight,
    PropagatorArrow -> None,
    Mass -> MNut,
    Indices -> {},
    PropagatorLabel -> "vt" },

F[4] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> Me,
    Indices -> {},
    PropagatorLabel -> "e" },

F[5] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MMU,
    Indices -> {},
    PropagatorLabel -> "mu" },

F[6] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MTA,
    Indices -> {},
    PropagatorLabel -> "ta" },

F[7] == {
    SelfConjugate -> False,
    QuantumNumbers -> {(2*Q)/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MU,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "u" },

F[8] == {
    SelfConjugate -> False,
    QuantumNumbers -> {(2*Q)/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MC,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "c" },

F[9] == {
    SelfConjugate -> False,
    QuantumNumbers -> {(2*Q)/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MT,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "t" },

F[10] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MD,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "d" },

F[11] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MS,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "s" },

F[12] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MB,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "b" },

F[13] == {
    SelfConjugate -> True,
    PropagatorType -> Straight,
    PropagatorArrow -> None,
    Mass -> MNe,
    Indices -> {},
    PropagatorLabel -> "Ne" },

F[14] == {
    SelfConjugate -> True,
    PropagatorType -> Straight,
    PropagatorArrow -> None,
    Mass -> MNm,
    Indices -> {},
    PropagatorLabel -> "Nm" },

F[15] == {
    SelfConjugate -> True,
    PropagatorType -> Straight,
    PropagatorArrow -> None,
    Mass -> MNt,
    Indices -> {},
    PropagatorLabel -> "Nt" },

S[1] == {
    SelfConjugate -> True,
    PropagatorType -> ScalarDash,
    PropagatorArrow -> None,
    Mass -> MH,
    Indices -> {},
    PropagatorLabel -> "H" },

S[2] == {
    SelfConjugate -> True,
    PropagatorType -> ScalarDash,
    PropagatorArrow -> None,
    Mass -> MZ,
    Indices -> {},
    PropagatorLabel -> "G0" },

S[3] == {
    SelfConjugate -> False,
    QuantumNumbers -> {Q},
    PropagatorType -> ScalarDash,
    PropagatorArrow -> None,
    Mass -> MW,
    Indices -> {},
    PropagatorLabel -> "GP" }
}


(*        Definitions       *)

GaugeXi[ V[1] ] = GaugeXi[A];
GaugeXi[ V[2] ] = GaugeXi[Z];
GaugeXi[ V[3] ] = GaugeXi[W];
GaugeXi[ V[4] ] = GaugeXi[G];
GaugeXi[ U[1] ] = GaugeXi[A];
GaugeXi[ U[2] ] = GaugeXi[Z];
GaugeXi[ U[3] ] = GaugeXi[W];
GaugeXi[ U[4] ] = GaugeXi[W];
GaugeXi[ U[5] ] = GaugeXi[G];
GaugeXi[ S[1] ] = 1;
GaugeXi[ S[2] ] = GaugeXi[Z];
GaugeXi[ S[3] ] = GaugeXi[W];

MZ[ ___ ] := MZ;
MW[ ___ ] := MW;
MNue[ ___ ] := MNue;
MNum[ ___ ] := MNum;
MNut[ ___ ] := MNut;
Me[ ___ ] := Me;
MMU[ ___ ] := MMU;
MTA[ ___ ] := MTA;
MU[ ___ ] := MU;
MC[ ___ ] := MC;
MT[ ___ ] := MT;
MD[ ___ ] := MD;
MS[ ___ ] := MS;
MB[ ___ ] := MB;
MNe[ ___ ] := MNe;
MNm[ ___ ] := MNm;
MNt[ ___ ] := MNt;
MH[ ___ ] := MH;


TheLabel[ V[4, {__}] ] := TheLabel[V[4]];
TheLabel[ U[5, {__}] ] := TheLabel[U[5]];
TheLabel[ F[7, {__}] ] := TheLabel[F[7]];
TheLabel[ F[8, {__}] ] := TheLabel[F[8]];
TheLabel[ F[9, {__}] ] := TheLabel[F[9]];
TheLabel[ F[10, {__}] ] := TheLabel[F[10]];
TheLabel[ F[11, {__}] ] := TheLabel[F[11]];
TheLabel[ F[12, {__}] ] := TheLabel[F[12]];


(*      Couplings (calculated by FeynRules)      *)

M$CouplingMatrices = {

C[ S[1] , S[1] , S[1] , S[1] ] == {{(-6*I)*lam, 0}},

C[ S[1] , S[1] , S[1] ] == {{(-6*I)*lam*vev, 0}},

C[ -U[5, {e1x1}] , U[5, {e2x1}] , V[4, {e3x2}] ] == {{gc3*SUNF[e3x2, e1x1, e2x1], 0}, {gc3*SUNF[e3x2, e1x1, e2x1], 0}, {0, 0}},

C[ V[4, {e1x2}] , V[4, {e2x2}] , V[4, {e3x2}] ] == {{-(gc4*SUNF[e1x2, e2x2, e3x2]), 0}, {gc4*SUNF[e1x2, e2x2, e3x2], 0}, {gc4*SUNF[e1x2, e2x2, e3x2], 0}, {-(gc4*SUNF[e1x2, e2x2, e3x2]), 0}, {-(gc4*SUNF[e1x2, e2x2, e3x2]), 0}, {gc4*SUNF[e1x2, e2x2, e3x2], 0}},

C[ V[4, {e1x2}] , V[4, {e2x2}] , V[4, {e3x2}] , V[4, {e4x2}] ] == {{(-I)*gc5*(SUNF[e1x2, e2x2, e3x2, e4x2] + SUNF[e1x2, e3x2, e2x2, e4x2]), 0}, {I*gc5*(SUNF[e1x2, e2x2, e3x2, e4x2] - SUNF[e1x2, e4x2, e2x2, e3x2]), 0}, {I*gc5*(SUNF[e1x2, e3x2, e2x2, e4x2] + SUNF[e1x2, e4x2, e2x2, e3x2]), 0}},

C[ -F[10, {e1x2}] , F[10, {e2x2}] , S[1] ] == {{I*gc6*IndexDelta[e1x2, e2x2], 0}, {I*gc6*IndexDelta[e1x2, e2x2], 0}},

C[ -F[11, {e1x2}] , F[11, {e2x2}] , S[1] ] == {{I*gc7*IndexDelta[e1x2, e2x2], 0}, {I*gc7*IndexDelta[e1x2, e2x2], 0}},

C[ -F[12, {e1x2}] , F[12, {e2x2}] , S[1] ] == {{I*gc8*IndexDelta[e1x2, e2x2], 0}, {I*gc8*IndexDelta[e1x2, e2x2], 0}},

C[ -F[7, {e1x2}] , F[7, {e2x2}] , S[1] ] == {{I*gc9*IndexDelta[e1x2, e2x2], 0}, {I*gc9*IndexDelta[e1x2, e2x2], 0}},

C[ -F[8, {e1x2}] , F[8, {e2x2}] , S[1] ] == {{I*gc10*IndexDelta[e1x2, e2x2], 0}, {I*gc10*IndexDelta[e1x2, e2x2], 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , S[1] ] == {{I*gc11*IndexDelta[e1x2, e2x2], 0}, {I*gc11*IndexDelta[e1x2, e2x2], 0}},

C[ F[1] , F[1] , S[1] ] == {{I*gc12, 0}, {I*gc12, 0}},

C[ F[13] , F[1] , S[1] ] == {{gc13L, 0}, {gc13R, 0}},

C[ F[2] , F[2] , S[1] ] == {{I*gc14, 0}, {I*gc14, 0}},

C[ F[14] , F[2] , S[1] ] == {{gc15L, 0}, {gc15R, 0}},

C[ F[3] , F[3] , S[1] ] == {{I*gc16, 0}, {I*gc16, 0}},

C[ F[15] , F[3] , S[1] ] == {{gc17L, 0}, {gc17R, 0}},

C[ F[13] , F[13] , S[1] ] == {{I*gc18, 0}, {I*gc18, 0}},

C[ F[14] , F[14] , S[1] ] == {{I*gc19, 0}, {I*gc19, 0}},

C[ F[15] , F[15] , S[1] ] == {{I*gc20, 0}, {I*gc20, 0}},

C[ -F[4] , F[4] , S[1] ] == {{I*gc21, 0}, {I*gc21, 0}},

C[ -F[5] , F[5] , S[1] ] == {{I*gc22, 0}, {I*gc22, 0}},

C[ -F[6] , F[6] , S[1] ] == {{I*gc23, 0}, {I*gc23, 0}},

C[ V[1] , V[3] , -V[3] ] == {{(-I)*gc24, 0}, {I*gc24, 0}, {I*gc24, 0}, {(-I)*gc24, 0}, {(-I)*gc24, 0}, {I*gc24, 0}},

C[ S[1] , S[1] , V[3] , -V[3] ] == {{((I/2)*EL^2)/sw^2, 0}},

C[ S[1] , V[3] , -V[3] ] == {{((I/2)*EL^2*vev)/sw^2, 0}},

C[ V[1] , V[1] , V[3] , -V[3] ] == {{(-I)*gc27, 0}, {(-I)*gc27, 0}, {(2*I)*gc27, 0}},

C[ V[3] , -V[3] , V[2] ] == {{(-I)*gc28, 0}, {I*gc28, 0}, {I*gc28, 0}, {(-I)*gc28, 0}, {(-I)*gc28, 0}, {I*gc28, 0}},

C[ V[3] , V[3] , -V[3] , -V[3] ] == {{(-I)*gc29, 0}, {(-I)*gc29, 0}, {(2*I)*gc29, 0}},

C[ V[1] , V[3] , -V[3] , V[2] ] == {{(-2*I)*gc30, 0}, {I*gc30, 0}, {I*gc30, 0}},

C[ S[1] , S[1] , V[2] , V[2] ] == {{((I/2)*EL^2*(cw^2 + sw^2)^2)/(cw^2*sw^2), 0}},

C[ S[1] , V[2] , V[2] ] == {{((I/2)*EL^2*(cw^2 + sw^2)^2*vev)/(cw^2*sw^2), 0}},

C[ V[3] , -V[3] , V[2] , V[2] ] == {{(-I)*gc33, 0}, {(-I)*gc33, 0}, {(2*I)*gc33, 0}},

C[ -F[4] , F[4] , V[1] ] == {{I*gc34, 0}, {I*gc34, 0}},

C[ -F[5] , F[5] , V[1] ] == {{I*gc35, 0}, {I*gc35, 0}},

C[ -F[6] , F[6] , V[1] ] == {{I*gc36, 0}, {I*gc36, 0}},

C[ F[1] , F[4] , V[3] ] == {{gc37, 0}, {0, 0}},

C[ F[2] , F[5] , V[3] ] == {{gc38, 0}, {0, 0}},

C[ F[3] , F[6] , V[3] ] == {{gc39, 0}, {0, 0}},

C[ F[13] , F[4] , V[3] ] == {{I*gc40, 0}, {0, 0}},

C[ F[14] , F[5] , V[3] ] == {{I*gc41, 0}, {0, 0}},

C[ F[15] , F[6] , V[3] ] == {{I*gc42, 0}, {0, 0}},

C[ -F[4] , F[1] , -V[3] ] == {{gc43, 0}, {0, 0}},

C[ -F[4] , F[13] , -V[3] ] == {{I*gc44, 0}, {0, 0}},

C[ -F[5] , F[2] , -V[3] ] == {{gc45, 0}, {0, 0}},

C[ -F[5] , F[14] , -V[3] ] == {{I*gc46, 0}, {0, 0}},

C[ -F[6] , F[3] , -V[3] ] == {{gc47, 0}, {0, 0}},

C[ -F[6] , F[15] , -V[3] ] == {{I*gc48, 0}, {0, 0}},

C[ -F[4] , F[4] , V[2] ] == {{I*gc49L, 0}, {I*gc49R, 0}},

C[ -F[5] , F[5] , V[2] ] == {{I*gc50L, 0}, {I*gc50R, 0}},

C[ -F[6] , F[6] , V[2] ] == {{I*gc51L, 0}, {I*gc51R, 0}},

C[ F[1] , F[1] , V[2] ] == {{I*gc52L, 0}, {I*gc52R, 0}},

C[ F[2] , F[2] , V[2] ] == {{I*gc53L, 0}, {I*gc53R, 0}},

C[ F[3] , F[3] , V[2] ] == {{I*gc54L, 0}, {I*gc54R, 0}},

C[ F[13] , F[1] , V[2] ] == {{gc55, 0}, {gc55, 0}},

C[ F[13] , F[13] , V[2] ] == {{I*gc56L, 0}, {I*gc56R, 0}},

C[ F[14] , F[2] , V[2] ] == {{gc57, 0}, {gc57, 0}},

C[ F[14] , F[14] , V[2] ] == {{I*gc58L, 0}, {I*gc58R, 0}},

C[ F[15] , F[3] , V[2] ] == {{gc59, 0}, {gc59, 0}},

C[ F[15] , F[15] , V[2] ] == {{I*gc60L, 0}, {I*gc60R, 0}},

C[ -F[8, {e1x2}] , F[8, {e2x2}] , V[1] ] == {{I*gc61*IndexDelta[e1x2, e2x2], 0}, {I*gc61*IndexDelta[e1x2, e2x2], 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , V[1] ] == {{I*gc62*IndexDelta[e1x2, e2x2], 0}, {I*gc62*IndexDelta[e1x2, e2x2], 0}},

C[ -F[7, {e1x2}] , F[7, {e2x2}] , V[1] ] == {{I*gc63*IndexDelta[e1x2, e2x2], 0}, {I*gc63*IndexDelta[e1x2, e2x2], 0}},

C[ -F[12, {e1x2}] , F[12, {e2x2}] , V[1] ] == {{I*gc64*IndexDelta[e1x2, e2x2], 0}, {I*gc64*IndexDelta[e1x2, e2x2], 0}},

C[ -F[10, {e1x2}] , F[10, {e2x2}] , V[1] ] == {{I*gc65*IndexDelta[e1x2, e2x2], 0}, {I*gc65*IndexDelta[e1x2, e2x2], 0}},

C[ -F[11, {e1x2}] , F[11, {e2x2}] , V[1] ] == {{I*gc66*IndexDelta[e1x2, e2x2], 0}, {I*gc66*IndexDelta[e1x2, e2x2], 0}},

C[ -F[8, {e1x2}] , F[8, {e2x2}] , V[4, {e3x2}] ] == {{I*gc67*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc67*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , V[4, {e3x2}] ] == {{I*gc68*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc68*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[7, {e1x2}] , F[7, {e2x2}] , V[4, {e3x2}] ] == {{I*gc69*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc69*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[12, {e1x2}] , F[12, {e2x2}] , V[4, {e3x2}] ] == {{I*gc70*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc70*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[10, {e1x2}] , F[10, {e2x2}] , V[4, {e3x2}] ] == {{I*gc71*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc71*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[11, {e1x2}] , F[11, {e2x2}] , V[4, {e3x2}] ] == {{I*gc72*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc72*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[8, {e1x2}] , F[12, {e2x2}] , V[3] ] == {{I*gc73*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[8, {e1x2}] , F[10, {e2x2}] , V[3] ] == {{I*gc74*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[8, {e1x2}] , F[11, {e2x2}] , V[3] ] == {{I*gc75*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[9, {e1x2}] , F[12, {e2x2}] , V[3] ] == {{I*gc76*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[9, {e1x2}] , F[10, {e2x2}] , V[3] ] == {{I*gc77*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[9, {e1x2}] , F[11, {e2x2}] , V[3] ] == {{I*gc78*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[7, {e1x2}] , F[12, {e2x2}] , V[3] ] == {{I*gc79*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[7, {e1x2}] , F[10, {e2x2}] , V[3] ] == {{I*gc80*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[7, {e1x2}] , F[11, {e2x2}] , V[3] ] == {{I*gc81*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[12, {e1x2}] , F[8, {e2x2}] , -V[3] ] == {{I*gc82*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[12, {e1x2}] , F[9, {e2x2}] , -V[3] ] == {{I*gc83*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[12, {e1x2}] , F[7, {e2x2}] , -V[3] ] == {{I*gc84*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[10, {e1x2}] , F[8, {e2x2}] , -V[3] ] == {{I*gc85*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[10, {e1x2}] , F[9, {e2x2}] , -V[3] ] == {{I*gc86*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[10, {e1x2}] , F[7, {e2x2}] , -V[3] ] == {{I*gc87*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[11, {e1x2}] , F[8, {e2x2}] , -V[3] ] == {{I*gc88*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[11, {e1x2}] , F[9, {e2x2}] , -V[3] ] == {{I*gc89*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[11, {e1x2}] , F[7, {e2x2}] , -V[3] ] == {{I*gc90*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[8, {e1x2}] , F[8, {e2x2}] , V[2] ] == {{I*gc91L*IndexDelta[e1x2, e2x2], 0}, {I*gc91R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , V[2] ] == {{I*gc92L*IndexDelta[e1x2, e2x2], 0}, {I*gc92R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[7, {e1x2}] , F[7, {e2x2}] , V[2] ] == {{I*gc93L*IndexDelta[e1x2, e2x2], 0}, {I*gc93R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[12, {e1x2}] , F[12, {e2x2}] , V[2] ] == {{I*gc94L*IndexDelta[e1x2, e2x2], 0}, {I*gc94R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[10, {e1x2}] , F[10, {e2x2}] , V[2] ] == {{I*gc95L*IndexDelta[e1x2, e2x2], 0}, {I*gc95R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[11, {e1x2}] , F[11, {e2x2}] , V[2] ] == {{I*gc96L*IndexDelta[e1x2, e2x2], 0}, {I*gc96R*IndexDelta[e1x2, e2x2], 0}}

}

(* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *)

(* Parameter replacement lists (These lists were created by FeynRules) *)

(* FA Couplings *)

M$FACouplings = {
     gc3 -> GS,
     gc4 -> -GS,
     gc5 -> -GS^2,
     gc6 -> -(ydo/Sqrt[2]),
     gc7 -> -(ys/Sqrt[2]),
     gc8 -> -(yb/Sqrt[2]),
     gc9 -> -(yup/Sqrt[2]),
     gc10 -> -(yc/Sqrt[2]),
     gc11 -> -(yt/Sqrt[2]),
     gc12 -> (-2*MNe*smixe^2)/vev,
     gc13L -> (MNe*smixe*(-1 + 2*smixe^2))/(Sqrt[1 - smixe^2]*vev),
     gc13R -> (MNe*(smixe - 2*smixe^3))/(Sqrt[1 - smixe^2]*vev),
     gc14 -> (-2*MNm*smixe*smixm*Sqrt[1 - smixm^2])/(Sqrt[1 - smixe^2]*vev),
     gc15L -> (MNm*smixe*(-1 + 2*smixm^2))/(Sqrt[1 - smixe^2]*vev),
     gc15R -> (MNm*smixe*(1 - 2*smixm^2))/(Sqrt[1 - smixe^2]*vev),
     gc16 -> (-2*MNt*smixe*smixt*Sqrt[1 - smixt^2])/(Sqrt[1 - smixe^2]*vev),
     gc17L -> (MNt*smixe*(-1 + 2*smixt^2))/(Sqrt[1 - smixe^2]*vev),
     gc17R -> (MNt*smixe*(1 - 2*smixt^2))/(Sqrt[1 - smixe^2]*vev),
     gc18 -> (-2*MNe*smixe^2)/vev,
     gc19 -> (-2*MNm*smixe*smixm*Sqrt[1 - smixm^2])/(Sqrt[1 - smixe^2]*vev),
     gc20 -> (-2*MNt*smixe*smixt*Sqrt[1 - smixt^2])/(Sqrt[1 - smixe^2]*vev),
     gc21 -> -(ye/Sqrt[2]),
     gc22 -> -(ym/Sqrt[2]),
     gc23 -> -(ytau/Sqrt[2]),
     gc24 -> EL,
     gc27 -> -EL^2,
     gc28 -> (cw*EL)/sw,
     gc29 -> EL^2/sw^2,
     gc30 -> (cw*EL^2)/sw,
     gc33 -> -((cw^2*EL^2)/sw^2),
     gc34 -> -EL,
     gc35 -> -EL,
     gc36 -> -EL,
     gc37 -> (EL*Sqrt[1 - smixe^2])/(Sqrt[2]*sw),
     gc38 -> (EL*Sqrt[1 - smixm^2])/(Sqrt[2]*sw),
     gc39 -> (EL*Sqrt[1 - smixt^2])/(Sqrt[2]*sw),
     gc40 -> -((EL*smixe)/(Sqrt[2]*sw)),
     gc41 -> -((EL*smixm)/(Sqrt[2]*sw)),
     gc42 -> -((EL*smixt)/(Sqrt[2]*sw)),
     gc43 -> -((EL*Sqrt[1 - smixe^2])/(Sqrt[2]*sw)),
     gc44 -> -((EL*smixe)/(Sqrt[2]*sw)),
     gc45 -> -((EL*Sqrt[1 - smixm^2])/(Sqrt[2]*sw)),
     gc46 -> -((EL*smixm)/(Sqrt[2]*sw)),
     gc47 -> -((EL*Sqrt[1 - smixt^2])/(Sqrt[2]*sw)),
     gc48 -> -((EL*smixt)/(Sqrt[2]*sw)),
     gc49L -> -(EL*(cw^2 - sw^2))/(2*cw*sw),
     gc49R -> (EL*sw)/cw,
     gc50L -> -(EL*(cw^2 - sw^2))/(2*cw*sw),
     gc50R -> (EL*sw)/cw,
     gc51L -> -(EL*(cw^2 - sw^2))/(2*cw*sw),
     gc51R -> (EL*sw)/cw,
     gc52L -> -(EL*(-1 + smixe^2)*(cw^2 + sw^2))/(2*cw*sw),
     gc52R -> (EL*(-1 + smixe^2)*(cw^2 + sw^2))/(2*cw*sw),
     gc53L -> -(EL*(-1 + smixm^2)*(cw^2 + sw^2))/(2*cw*sw),
     gc53R -> (EL*(-1 + smixm^2)*(cw^2 + sw^2))/(2*cw*sw),
     gc54L -> -(EL*(-1 + smixt^2)*(cw^2 + sw^2))/(2*cw*sw),
     gc54R -> (EL*(-1 + smixt^2)*(cw^2 + sw^2))/(2*cw*sw),
     gc55 -> (EL*smixe*Sqrt[1 - smixe^2]*(cw^2 + sw^2))/(2*cw*sw),
     gc56L -> (EL*smixe^2*(cw^2 + sw^2))/(2*cw*sw),
     gc56R -> -(EL*smixe^2*(cw^2 + sw^2))/(2*cw*sw),
     gc57 -> (EL*smixm*Sqrt[1 - smixm^2]*(cw^2 + sw^2))/(2*cw*sw),
     gc58L -> (EL*smixm^2*(cw^2 + sw^2))/(2*cw*sw),
     gc58R -> -(EL*smixm^2*(cw^2 + sw^2))/(2*cw*sw),
     gc59 -> (EL*smixt*Sqrt[1 - smixt^2]*(cw^2 + sw^2))/(2*cw*sw),
     gc60L -> (EL*smixt^2*(cw^2 + sw^2))/(2*cw*sw),
     gc60R -> -(EL*smixt^2*(cw^2 + sw^2))/(2*cw*sw),
     gc61 -> (2*EL)/3,
     gc62 -> (2*EL)/3,
     gc63 -> (2*EL)/3,
     gc64 -> -EL/3,
     gc65 -> -EL/3,
     gc66 -> -EL/3,
     gc67 -> GS,
     gc68 -> GS,
     gc69 -> GS,
     gc70 -> GS,
     gc71 -> GS,
     gc72 -> GS,
     gc73 -> (CKM2x3*EL)/(Sqrt[2]*sw),
     gc74 -> (CKM2x1*EL)/(Sqrt[2]*sw),
     gc75 -> (CKM2x2*EL)/(Sqrt[2]*sw),
     gc76 -> (CKM3x3*EL)/(Sqrt[2]*sw),
     gc77 -> (CKM3x1*EL)/(Sqrt[2]*sw),
     gc78 -> (CKM3x2*EL)/(Sqrt[2]*sw),
     gc79 -> (CKM1x3*EL)/(Sqrt[2]*sw),
     gc80 -> (CKM1x1*EL)/(Sqrt[2]*sw),
     gc81 -> (CKM1x2*EL)/(Sqrt[2]*sw),
     gc82 -> (EL*Conjugate[CKM2x3])/(Sqrt[2]*sw),
     gc83 -> (EL*Conjugate[CKM3x3])/(Sqrt[2]*sw),
     gc84 -> (EL*Conjugate[CKM1x3])/(Sqrt[2]*sw),
     gc85 -> (EL*Conjugate[CKM2x1])/(Sqrt[2]*sw),
     gc86 -> (EL*Conjugate[CKM3x1])/(Sqrt[2]*sw),
     gc87 -> (EL*Conjugate[CKM1x1])/(Sqrt[2]*sw),
     gc88 -> (EL*Conjugate[CKM2x2])/(Sqrt[2]*sw),
     gc89 -> (EL*Conjugate[CKM3x2])/(Sqrt[2]*sw),
     gc90 -> (EL*Conjugate[CKM1x2])/(Sqrt[2]*sw),
     gc91L -> (cw*EL)/(2*sw) - (EL*sw)/(6*cw),
     gc91R -> (-2*EL*sw)/(3*cw),
     gc92L -> (cw*EL)/(2*sw) - (EL*sw)/(6*cw),
     gc92R -> (-2*EL*sw)/(3*cw),
     gc93L -> (cw*EL)/(2*sw) - (EL*sw)/(6*cw),
     gc93R -> (-2*EL*sw)/(3*cw),
     gc94L -> -(EL*(3*cw^2 + sw^2))/(6*cw*sw),
     gc94R -> (EL*sw)/(3*cw),
     gc95L -> -(EL*(3*cw^2 + sw^2))/(6*cw*sw),
     gc95R -> (EL*sw)/(3*cw),
     gc96L -> -(EL*(3*cw^2 + sw^2))/(6*cw*sw),
     gc96R -> (EL*sw)/(3*cw)};

